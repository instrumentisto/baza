image:
  repository: ghcr.io/instrumentisto/baza
  tag: 0.2
  pullPolicy: IfNotPresent

# Additional labels to apply to all Kubernetes resources created by this chart.
labels: {}
  #app.kubernetes.io/part-of: baza

# Baza S3 server configuration.
conf:
  port: 9294
  log:
    level: info

statefulset:
  replicas: 1
  revisionHistoryLimit: 0

  # Optional revision number that may be used for fine-grained `StatefulSet`
  # rollouts.
  revision: ""

  annotations: {}
    #kubernetes.io/change-cause=kubectl set ...

  # Affinity rules for scheduling `Pod`s of this `StatefulSet` on `Node`s.
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  nodeAffinity: {}
    #requiredDuringSchedulingIgnoredDuringExecution:
    #  nodeSelectorTerms:
    #    - matchExpressions:
    #        - key: node-label-key
    #          operator: In
    #          values: ["node-label-value"]
  # Inter-`Pod` affinity rules for scheduling `Pod`s of this `StatefulSet`.
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  podAffinity: {}
  # Anti-affinity rules for scheduling `Pod`s of this `StatefulSet`.
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  # You may either toggle options below for default anti-affinity rules,
  # or specify the whole set of anti-affinity rules instead of them.
  podAntiAffinity:
    # The topology key to be used.
    # Can be used to spread across different `Node`s, AZs, regions etc.
    topologyKey: kubernetes.io/hostname
    # Type of anti-affinity rules: either `soft`, `hard` or empty value (which
    # disables anti-affinity rules).
    type: hard
    # Weight for `soft` anti-affinity rules.
    # Doesn't apply for other anti-affinity types.
    weight: 100

  tolerations: []
    #- key: "node.alpha.kubernetes.io/unreachable"
    #  operator: "Exists"
    #  effect: "NoExecute"

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

# Persistence settings for stored data.
# If not used then non-persistent Kubernetes `emptyDir` volume will be used.
data:
  # Absolute path on host to persist data in.
  hostPath: ""

  persistentVolume:
    # If enabled then a `PersistentVolumeClaim` will be created and used for
    # persisting data.
    enabled: no

    # If defined, then uses the provided existing `PersistentVolumeClaim`.
    existingClaim: ""

    accessModes: ["ReadWriteOnce"]
    size: 8Gi
    # If defined, then `storageClassName: <storageClass>`.
    # If set to "-", then `storageClassName: ""`, which disables dynamic
    # provisioning.
    # If undefined or empty (default), then no `storageClassName` spec is set,
    # so the default provisioner will be chosen.
    storageClass: ""

    annotations: {}

ingress:
  enabled: yes

  # Hosts must be specified without `www.` part.
  hosts:
    - baza.test

  # Optional URL sub-path to prepend `Ingress` endpoints with.
  # Baza S3 API will be available under `<subPath>/s3/`.
  # Nginx (if enabled) will be available under `<subPath>/`.
  subPath: ""  # /baza/

  tls:
    enabled: no
    auto: no
    secretName:  # not required when `auto: yes`
      baza.test: baza.test.tls

  annotations:
    kubernetes.io/ingress.class: nginx


# Additional Nginx server for serving files publicly.
nginx:
  enabled: yes

  image:
    repository: docker.io/nginx
    tag: stable-alpine
    pullPolicy: IfNotPresent

  port: 8080

  # Overwrites `/etc/nginx/nginx.conf`, if specified.
  conf: ""
  # Overwrites `/etc/nginx/conf.d/<file>`, if specified.
  conf.d:
    default.conf: |
      server {
        listen    8080;

        location / {
          root    /var/lib/baza/data;

          if ( $request_method !~ ^(GET|HEAD)$ ) {
            return    405;
          }
        }
      }

  resources: {}
    #limits:
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi
